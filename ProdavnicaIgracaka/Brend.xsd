<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Brend" targetNamespace="http://tempuri.org/Brend.xsd" xmlns:mstns="http://tempuri.org/Brend.xsd" xmlns="http://tempuri.org/Brend.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ProdavnicaIgracakaConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ProdavnicaIgracakaConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ProdavnicaIgracaka.Properties.Settings.GlobalReference.Default.ProdavnicaIgracakaConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BRENDTableAdapter" GeneratorDataComponentClassName="BRENDTableAdapter" Name="BREND" UserDataComponentName="BRENDTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ProdavnicaIgracakaConnectionString (Settings)" DbObjectName="ProdavnicaIgracaka.dbo.BREND" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[BREND] WHERE (([idB] = @Original_idB) AND ([nazivB] = @Original_nazivB))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idB" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idB" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_nazivB" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nazivB" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[BREND] ([nazivB]) VALUES (@nazivB);
SELECT idB, nazivB FROM BREND WHERE (idB = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@nazivB" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nazivB" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idB, nazivB FROM dbo.BREND</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[BREND] SET [nazivB] = @nazivB WHERE (([idB] = @Original_idB) AND ([nazivB] = @Original_nazivB));
SELECT idB, nazivB FROM BREND WHERE (idB = @idB)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@nazivB" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nazivB" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idB" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idB" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_nazivB" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nazivB" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idB" ColumnName="idB" DataSourceName="ProdavnicaIgracaka.dbo.BREND" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idB" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idB" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idB" DataSetColumn="idB" />
              <Mapping SourceColumn="nazivB" DataSetColumn="nazivB" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Brend" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="Brend" msprop:Generator_UserDSName="Brend">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="BREND" msprop:Generator_TableClassName="BRENDDataTable" msprop:Generator_TableVarName="tableBREND" msprop:Generator_TablePropName="BREND" msprop:Generator_RowDeletingName="BRENDRowDeleting" msprop:Generator_RowChangingName="BRENDRowChanging" msprop:Generator_RowEvHandlerName="BRENDRowChangeEventHandler" msprop:Generator_RowDeletedName="BRENDRowDeleted" msprop:Generator_UserTableName="BREND" msprop:Generator_RowChangedName="BRENDRowChanged" msprop:Generator_RowEvArgName="BRENDRowChangeEvent" msprop:Generator_RowClassName="BRENDRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idB" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnidB" msprop:Generator_ColumnPropNameInRow="idB" msprop:Generator_ColumnPropNameInTable="idBColumn" msprop:Generator_UserColumnName="idB" type="xs:int" />
              <xs:element name="nazivB" msprop:Generator_ColumnVarNameInTable="columnnazivB" msprop:Generator_ColumnPropNameInRow="nazivB" msprop:Generator_ColumnPropNameInTable="nazivBColumn" msprop:Generator_UserColumnName="nazivB">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:BREND" />
      <xs:field xpath="mstns:idB" />
    </xs:unique>
  </xs:element>
</xs:schema>